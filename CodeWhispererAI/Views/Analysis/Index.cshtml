@model CodeSnippetAnalysisViewModel

@{
    ViewData["Title"] = "Code Analysis";
}

<div class="container-fluid custom-container">
    <div class="row">
        <!-- Input Area -->
        <div class="col-md-6 col-lg-6">
            <h1 class="display-4 mb-4 text-light">Code Input</h1>
            <form asp-controller="Analysis" asp-action="AnalyzeCodeSnippet" method="post">
                <!-- Ace Editor will render here -->
                <div id="editor" class="p-2 border mb-4"></div>

                <!-- Original textarea, now hidden, will hold the code for submission -->
                <textarea asp-for="CodeSnippet.CodeInputted" id="codeInput" style="display: none;"></textarea>

                <div class="d-flex justify-content-center">
                    <button type="submit" id="analyzeButton" class="btn btn-light mt-2 btn-lg">Analyze</button>
                </div>
            </form>
        </div>

        <!-- Results Area -->
        <div class="col-md-6 col-lg-6">
            <h1 class="display-4 mb-4 text-light">Code Feedback</h1>
            @if (Model.ChatCompletion != null && Model.ChatCompletion.Choices.Count > 1)
            {
                <!-- Skip 0 since that cell holds the entire api call reponse. 1 - 3 cells have formatted feedback sections -->
                for (int i = 1; i < Model.ChatCompletion.Choices.Count; i++)
                {
                    <!-- Choice List from ChatCompletion model selecting current feedback section -->
                    var choice = Model.ChatCompletion.Choices[i];
                    <!-- Extracting Category Name from current choices list message content string -->
                    var categoryName = Model.ChatCompletion.ExtractCategoryName(choice.Message.Content);

                    <p class= "mb-3">
                        <!-- Fancy bootstrap -->
                        <button class="btn btn-light toggle-button btn-lg" type="button" aria-expanded="false" aria-controls="collapseFeedback-@i">
                            <!-- Card header title -->
                            @categoryName 
                        </button>
                    </p>
                    <!-- Fancy bootstrap -->
                    <div class="collapse" id="collapseFeedback-@i">
                        <div class="card card-body bg-dark border-Secondary mb-3">
                            <!-- Defualt state hidden, message content for feedback -->
                            <pre class="codeOutput text-light">@choice.Message.Content</pre>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

    <script>
          // Had to write some js to open and close card. I ran into alot of trouble just using bootstraps methods.
        document.addEventListener('DOMContentLoaded', () => {
            // Select all toggle buttons
            const toggleButtons = document.querySelectorAll('.toggle-button');

            toggleButtons.forEach(button => {
                // Find the target collapse element by ID
                const targetId = button.getAttribute('aria-controls');
                const targetCollapse = document.getElementById(targetId);

                button.addEventListener('click', () => {
                    // Check if the collapse element is shown or hidden
                    const isExpanded = button.getAttribute('aria-expanded') === 'true';
                    if (isExpanded) {
                        // Collapse the element
                        targetCollapse.classList.remove('show');
                        button.setAttribute('aria-expanded', 'false');
                    } else {
                        // Show the element
                        targetCollapse.classList.add('show');
                        button.setAttribute('aria-expanded', 'true');
                    }
                });
            });
        });
    </script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>


<script>
    var editor = ace.edit("editor");

    editor.setShowPrintMargin(false);
    editor.setTheme("ace/theme/monokai");
    editor.session.setUseWrapMode(true);
    editor.session.setMode("ace/mode/csharp");

    editor.setOptions({
        fontSize: "12pt",
        showLineNumbers: false
    });

    // Sync Ace Editor content with the hidden textarea
    var textarea = document.getElementById('codeInput');
    editor.getSession().on("change", function () {
        textarea.value = editor.getSession().getValue();
    });

    // Initialize the editor with the textarea's value
    editor.getSession().setValue(textarea.value);
</script>